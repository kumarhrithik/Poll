{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marke\\\\OneDrive\\\\Desktop\\\\Data Science Model\\\\poll-frontend\\\\src\\\\components\\\\Vote.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Vote() {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate(); // Get the navigate function\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Get the pollId from the URL\n    const pollId = window.location.pathname.split('/').pop();\n\n    // Send vote and email to Django backend\n    axios.post(`http://127.0.0.1:8000/api/polls/${pollId}/vote/`, {\n      selectedOption,\n      email\n    }).then(response => {\n      console.log(response.data);\n      // Redirect to results or handle success\n      navigate(`/results/${pollId}`);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast Your Vote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"poll\",\n            value: \"option1\",\n            checked: selectedOption === 'option1',\n            onChange: () => setSelectedOption('option1')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), \"Option 1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-info\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Vote, \"60V5D5sv9dtUnsYaOghiMdfr21M=\", false, function () {\n  return [useNavigate];\n});\n_c = Vote;\nexport default Vote;\nvar _c;\n$RefreshReg$(_c, \"Vote\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Vote","_s","selectedOption","setSelectedOption","email","setEmail","navigate","handleSubmit","e","preventDefault","pollId","window","location","pathname","split","pop","post","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","value","onChange","target","className","checked","_c","$RefreshReg$"],"sources":["C:/Users/marke/OneDrive/Desktop/Data Science Model/poll-frontend/src/components/Vote.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport axios from 'axios';\r\n\r\nfunction Vote() {\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const navigate = useNavigate(); // Get the navigate function\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get the pollId from the URL\r\n    const pollId = window.location.pathname.split('/').pop();\r\n\r\n    // Send vote and email to Django backend\r\n    axios.post(`http://127.0.0.1:8000/api/polls/${pollId}/vote/`, { selectedOption, email })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        // Redirect to results or handle success\r\n        navigate(`/results/${pollId}`);\r\n      })\r\n      .catch(error => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cast Your Vote</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Add email input field */}\r\n        <label htmlFor=\"email\">Your Email</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"form-control\"\r\n        />\r\n\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"poll\"\r\n              value=\"option1\"\r\n              checked={selectedOption === 'option1'}\r\n              onChange={() => setSelectedOption('option1')}\r\n            />\r\n            Option 1\r\n          </label>\r\n          {/* Similar radio inputs for option2 and option3 */}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-info\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Vote;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}